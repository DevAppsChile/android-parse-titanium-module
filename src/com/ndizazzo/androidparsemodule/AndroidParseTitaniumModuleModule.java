/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package com.ndizazzo.androidparsemodule;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;

import org.appcelerator.titanium.TiApplication;
import org.appcelerator.kroll.common.Log;

@Kroll.module(name="AndroidParseTitaniumModule", id="com.ndizazzo.androidparsemodule")
public class AndroidParseTitaniumModuleModule extends KrollModule
{

	// Standard Debugging variables
	private static final String TAG = "AndroidParseTitaniumModuleModule";

	public AndroidParseTitaniumModuleModule()
	{
		super();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
		//Log.d(TAG, "inside onAppCreate");
		// put module init code that needs to run when the application is created
	}

	@Kroll.method
	public void initParse(Object[] initArgs)
	{
		Log.d("initParse called");
		// Verify appId
		// Verify clientKey
	}

	@Kroll.method
	public void findObjects(String objectName, Object[] conditions, KrollFunction callback)
	{
		Log.d("findObjects called");
		// parameter object name
		// parameter condition array
		// parameter callback
	}

	@Kroll.method
	public void registerForPush(String deviceToken, String channelName, KrollFunction callback)
	{
		Log.d("registerForPush called");
		// parameter deviceToken
		// parameter channel name
		// parameter callback
	}

	@Kroll.method
	public void unsubscribeFromPush(String channelName, KrollFunction callback)
	{
		Log.d("unsubscribeFromPush called");
		// parameter channel name
		// parameter callback
	}

}
